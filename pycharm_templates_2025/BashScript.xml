<templateSet group="BashScript">
  <template name="bh_case" value="case $value$ in&#10; $pattern$)&#10;  $END$ ;;&#10;  *)&#10;    echo ''&#10;    ;;&#10;esac&#10;" description="Case statement" toReformat="false" toShortenFQNames="false">
    <variable name="value" expression="" defaultValue="&quot;$x&quot;" alwaysStopAt="true" />
    <variable name="pattern" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_case_pattern2" value="$a$|$b$)&#10;  $END$ ;;" description="Case pattern with two alternatives" toReformat="false" toShortenFQNames="false">
    <variable name="a" expression="" defaultValue="&quot;$a&quot;" alwaysStopAt="true" />
    <variable name="b" expression="" defaultValue="&quot;$b&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_function" value="function $FUNCNAME$() {&#10;    local $default_argument$=${$default_argument_position$:-$default_argument_value$}&#10;    local $all_arguments_as_list$=(&quot;$@&quot;)&#10;    local $all_arguments_as_string$=$*&#10;    $statement$&#10;}" description="Function template" toReformat="true" toShortenFQNames="false">
    <variable name="FUNCNAME" expression="" defaultValue="&quot;function_name&quot;" alwaysStopAt="true" />
    <variable name="statement" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="default_argument" expression="" defaultValue="&quot;argument1&quot;" alwaysStopAt="true" />
    <variable name="default_argument_position" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <variable name="default_argument_value" expression="" defaultValue="&quot;\&quot;value\&quot;&quot;" alwaysStopAt="true" />
    <variable name="all_arguments_as_list" expression="" defaultValue="&quot;all_arguments_as_list&quot;" alwaysStopAt="true" />
    <variable name="all_arguments_as_string" expression="" defaultValue="&quot;all_arguments_as_string&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_command_result" value="if [[ &quot;$($command$)&quot; == $pattern_string$ ]]&#10;then&#10;    $STATEMENT_IF_TRUE$&#10;fi" description="if statement" toReformat="true" toShortenFQNames="false">
    <variable name="command" expression="" defaultValue="&quot;uname -s&quot;" alwaysStopAt="true" />
    <variable name="pattern_string" expression="" defaultValue="&quot;*\&quot;Darwin\&quot;*&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_TRUE" expression="" defaultValue="&quot;echo \&quot;true\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_else" value="if [[ $TEST$ ]]&#10;then&#10;    $STATEMENT_IF_TRUE$&#10;else&#10;    $STATEMENT_IF_FALSE$&#10;fi" description="if-else statement" toReformat="true" toShortenFQNames="false">
    <variable name="TEST" expression="" defaultValue="&quot;1 == 1&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_TRUE" expression="" defaultValue="&quot;echo \&quot;true\&quot;&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_FALSE" expression="" defaultValue="&quot;echo \&quot;false\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_for-var-in-list" value="arr=(&#10;    $elements1$&#10;    $elements1$&#10;    $elements1$&#10;    $elements2$&#10;)&#10;for $var$ in $arr[@]&#10;do&#10;  $STATEMENT_IN_FOR_LOOP$&#10;done&#10;" description="&quot;For each in set&quot; loop" toReformat="true" toShortenFQNames="false">
    <variable name="elements1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="elements2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var" expression="" defaultValue="&quot;var&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IN_FOR_LOOP" expression="" defaultValue="&quot;echo $var&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_usr_bin_env_bash" value="#!$ENV$ $BASH$&#10;$END$" description="shebang line" toReformat="false" toShortenFQNames="false">
    <variable name="ENV" expression="" defaultValue="&quot;/usr/bin/env&quot;" alwaysStopAt="false" />
    <variable name="BASH" expression="enum(&quot;bash&quot;,&quot;sh&quot;)" defaultValue="bash" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_command_exists" value="if command -v $COMMAND$ &amp;&gt;/dev/null&#10;then&#10;    $COMMAND$&#10;fi" description="if no command" toReformat="true" toShortenFQNames="false">
    <variable name="COMMAND" expression="" defaultValue="&quot;wget&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_file_exists" value="if [[ -e $directory$ ]]&#10;then&#10;    $STATEMENT_IF_TRUE$&#10;fi" description="if statement" toReformat="true" toShortenFQNames="false">
    <variable name="directory" expression="" defaultValue="&quot;~&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_TRUE" expression="" defaultValue="&quot;echo \&quot;true\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_elif_if" value="if [[ $TEST$ ]]&#10;then&#10;    $STATEMENT_IF_TRUE$&#10;elif test $TEST2$&#10;then&#10;    $STATEMENT_ELIF_TRUE$&#10;else&#10;    $STATEMENT_IF_FALSE$&#10;fi" description="if-else statement" toReformat="true" toShortenFQNames="false">
    <variable name="TEST" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_TRUE" expression="" defaultValue="&quot;echo \&quot;true\&quot;&quot;" alwaysStopAt="true" />
    <variable name="TEST2" expression="" defaultValue="&quot;1 == 1&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_ELIF_TRUE" expression="" defaultValue="&quot;echo \&quot;elif true\&quot;&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_FALSE" expression="" defaultValue="&quot;echo \&quot;false\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_echo_simple" value="echo &quot;$command$&quot;&#10;echo '$command$'" description="echo the command and execute" toReformat="true" toShortenFQNames="false">
    <variable name="command" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_read" value="read $x$" description="read" toReformat="true" toShortenFQNames="false">
    <variable name="x" expression="" defaultValue="x" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_for-var-in-output" value="for $FILE$ in $(find -type f $DIRECTORY$)&#10;do&#10;  $STATEMENT_IN_FOR$&#10;done&#10;" description="&quot;For each in set&quot; loop" toReformat="true" toShortenFQNames="false">
    <variable name="DIRECTORY" expression="" defaultValue="&quot;~/.zshrc.d/zshrc_ext/extra/&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IN_FOR" expression="" defaultValue="&quot;echo $file&quot;" alwaysStopAt="true" />
    <variable name="FILE" expression="" defaultValue="&quot;file&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_for_i_in_range" value="for $i$ in $(seq $start$ $step$ $end$)&#10;do&#10;  $statement_in_for$&#10;done" description="&quot;For each in set&quot; loop" toReformat="true" toShortenFQNames="false">
    <variable name="i" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <variable name="start" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <variable name="step" expression="" defaultValue="&quot;10&quot;" alwaysStopAt="true" />
    <variable name="end" expression="" defaultValue="&quot;2&quot;" alwaysStopAt="true" />
    <variable name="statement_in_for" expression="" defaultValue="&quot;echo $i&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_default_variable_value" value="$default_argument$=${$default_argument_to_get_value_from$:-$default_argument_value$}" description="Case statement" toReformat="false" toShortenFQNames="false">
    <variable name="default_argument" expression="" defaultValue="&quot;var&quot;" alwaysStopAt="true" />
    <variable name="default_argument_to_get_value_from" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <variable name="default_argument_value" expression="" defaultValue="&quot;\&quot;bash\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_while" value="$initial_condition$&#10;while test $TEST$&#10;do&#10;    $ENDSELECTION$&#10;done" description="while-loop" toReformat="true" toShortenFQNames="false">
    <variable name="initial_condition" expression="" defaultValue="&quot;counter=1&quot;" alwaysStopAt="true" />
    <variable name="TEST" expression="" defaultValue="&quot;$counter -le 10&quot;" alwaysStopAt="true" />
    <variable name="ENDSELECTION" expression="" defaultValue="&quot;echo $counter; ((counter++))&quot;" alwaysStopAt="true" />
  </template>
  <template name="bh_pass" value="echo &gt; /dev/null" description="Function template" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if" value="if [[ &quot;$($command$)&quot; == $pattern_string$ ]]&#10;then&#10;    $STATEMENT_IF_TRUE$&#10;fi" description="if statement" toReformat="true" toShortenFQNames="false">
    <variable name="command" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="pattern_string" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_TRUE" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="bh_expression" value="expr " description="" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_evalute expression" value="$(($expression$))" description="" toReformat="true" toShortenFQNames="false">
    <variable name="expression" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_function_with_return" value="function $FUNCNAME$() {&#10;    $default_argument$=${$default_argument_position$:-$default_argument_value$}&#10;    $statement$&#10;    return $return_value$&#10;}" description="Function template" toReformat="true" toShortenFQNames="false">
    <variable name="FUNCNAME" expression="" defaultValue="&quot;function_name&quot;" alwaysStopAt="true" />
    <variable name="default_argument" expression="" defaultValue="&quot;argument1&quot;" alwaysStopAt="true" />
    <variable name="default_argument_position" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <variable name="default_argument_value" expression="" defaultValue="&quot;\&quot;value\&quot;&quot;" alwaysStopAt="true" />
    <variable name="statement" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="return_value" expression="" defaultValue="&quot;\&quot;return_value\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_function_call_with_return_value" value="$return_value$=$($function$)" description="Function template" toReformat="true" toShortenFQNames="false">
    <variable name="return_value" expression="" defaultValue="&quot;return_value&quot;" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_variable_substring" value="${$var$:$start_position$:$length$}" description="if statement" toReformat="true" toShortenFQNames="false">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="start_position" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <variable name="length" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_string_index" value="index &quot;${$var$}&quot; $sub_string$" description="if statement" toReformat="true" toShortenFQNames="false">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="sub_string" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_array_size" value="${#$array_name$}" description="Function template" toReformat="true" toShortenFQNames="false">
    <variable name="array_name" expression="" defaultValue="&quot;arr&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_stderr_redirect_to_null" value="2&gt; nul" description="while-loop" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_std_redirect_to_nul" value="2&gt; nul 1&gt; nul" description="while-loop" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_set_initialize_assign_variable" value="$variable_name$=$value$" description="" toReformat="true" toShortenFQNames="false">
    <variable name="variable_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_get_variable" value="\$variable_name" description="" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_get_command_output" value="$($command$)" description="" toReformat="true" toShortenFQNames="false">
    <variable name="command" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_get_length_of_arguments" value="$#" description="" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_array_" value="${#$array_name$}" description="Function template" toReformat="true" toShortenFQNames="false">
    <variable name="array_name" expression="" defaultValue="&quot;arr&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if string is empty" value="if [[ -z &quot;$parameter$&quot; ]]&#10;then&#10;    $STATEMENT_IF_TRUE$&#10;else&#10;    $STATEMENT_IF_false$&#10;fi" description="" toReformat="true" toShortenFQNames="false">
    <variable name="parameter" expression="" defaultValue="&quot;$&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_TRUE" expression="" defaultValue="&quot;echo \&quot;true\&quot;&quot;" alwaysStopAt="true" />
    <variable name="STATEMENT_IF_false" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_file_directory_path" value="file_directory_path=$(dirname $0)&#10;$default_cd_command$" description="script_dir_path=$(dirname $0)" toReformat="true" toShortenFQNames="false">
    <variable name="default_cd_command" expression="" defaultValue="&quot;cd $file_directory_path&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_for-var-in-from-pycharm" value="for $LOOPVAR$ in $LOOPITEMS$ ; do&#10;    $END$$SELECTION$&#10;done&#10;" description="&quot;For each in set&quot; loop" toReformat="true" toShortenFQNames="false">
    <variable name="LOOPVAR" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <variable name="LOOPITEMS" expression="" defaultValue="&quot;item1 item2 item3&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_with_probability" value="if [[ &quot;$(shuf -i 1-100 -n 1)&quot; &lt; $probability_in_percent$ ]]&#10;then&#10;    $command$&#10;fi" description="Case pattern with 3 alternatives" toReformat="false" toShortenFQNames="false">
    <variable name="probability_in_percent" expression="" defaultValue="&quot;5&quot;" alwaysStopAt="true" />
    <variable name="command" expression="" defaultValue="&quot;echo &quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_CD script_dir" value="script_dir_path=$(dirname $0)&#10;cd $script_dir_path" description="script_dir" toReformat="true" toShortenFQNames="false">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_debug" value="DEBUG=1&#10;if [[ $DEBUG == 1 ]]; then&#10;  echo $debug_msg$&#10;fi" description="if statement" toReformat="true" toShortenFQNames="false">
    <variable name="debug_msg" expression="" defaultValue="&quot;\&quot;debug msg\&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if_variable_exists" value="if [[ -z &quot;$variable$&quot; ]]&#10;then&#10;fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_print" value="$command$&#10;echo &quot;($command$)&quot;&#10;" description="echo the command and execute" toReformat="true" toShortenFQNames="false">
    <variable name="command" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_p" value="echo '**************************************************************************'&#10;echo &quot;$$$value$&quot;&#10;echo '^^($value$)^^'&#10;echo &quot;at:&quot;&#10;echo &quot;$cc$&quot;&#10;echo '**************************************************************************'&#10;" description="echo the command and execute" toReformat="true" toShortenFQNames="false">
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="cc" expression="" defaultValue="concat(fileRelativePath(), &quot;:&quot;, lineNumber())" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if uname" value="if [[ &quot;$(uname)&quot; == &quot;Darwin&quot; ]]; then&#10;    # in Mac OS&#10;    $s1$&#10;elif [[ &quot;$(hostname)&quot; == *home-kli02-* ]]; then&#10;    # in ephemeral&#10;    $s2$&#10;elif [[ &quot;$(hostname)&quot; == *.blue.ygrid.yahoo.com ]]; then&#10;    # in the grid&#10;    $s3$&#10;else&#10;    $s4$&#10;fi  &#10; " description="" toReformat="true" toShortenFQNames="true">
    <variable name="s1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="s2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="s3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="s4" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_alias using bash syntax" value="alias $alias$='$cmd$'" description="" toReformat="true" toShortenFQNames="true">
    <variable name="alias" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="cmd" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_dirname" value="dirname" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_basename" value="basename" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_script directory  safe" value="SCRIPT_DIRECTORY=&quot;$( cd &quot;$(dirname &quot;$0&quot;)&quot; &gt;/dev/null 2&gt;&amp;1 ; pwd -P )&quot;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_pawk" value="$result$=$(pawk $argument1$ -p 'l$statement$')" description="" toReformat="true" toShortenFQNames="true">
    <variable name="result" expression="" defaultValue="&quot;result&quot;" alwaysStopAt="true" />
    <variable name="argument1" expression="" defaultValue="&quot;argument1&quot;" alwaysStopAt="true" />
    <variable name="statement" expression="" defaultValue="&quot;statement&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_return in function" value="echo $result$ " description="" toReformat="true" toShortenFQNames="true">
    <variable name="result" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_suppress stderr" value="2&gt; /dev/null" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Django" value="false" />
      <option name="HTML" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="Python" value="false" />
      <option name="SQL" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="bh_if none then" value="if test -z $$$msg$&#10;    then&#10;          $msg$=&quot;$stst$&quot;&#10; fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="msg" expression="" defaultValue="&quot;var&quot;" alwaysStopAt="true" />
    <variable name="stst" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_args" value="$@" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="CSS" value="true" />
      <option name="CUCUMBER_FEATURE_FILE" value="true" />
      <option name="CoffeeScript" value="true" />
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_function simple" value="function $FUNCNAME$() {&#10;    $END$$SELECTION$&#10;}" description="Function template" toReformat="true" toShortenFQNames="false">
    <variable name="FUNCNAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_call funciton" value="$a$$($pwd$)" description="call function" toReformat="true" toShortenFQNames="true">
    <variable name="pwd" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="a" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_refer to variable" value="&quot;${$aaa$}&quot;" description="refer to single variable" toReformat="true" toShortenFQNames="true">
    <variable name="aaa" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_argument to refer to" value="${$1$:-&quot;$default$&quot;}" description="argument for script / function with default value" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="&quot;1&quot;" alwaysStopAt="true" />
    <variable name="default" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_refer to single variable in string" value="${$aaa$}" description="refer to single variable in string" toReformat="true" toShortenFQNames="true">
    <variable name="aaa" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_time" value="time " description="timing a command" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_fzf" value="|  eval &quot;fzf ${FZF_DEFAULT_OPTS}&quot;" description="timing a command" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_get_file_name_list" value="find $directory$ -type f -name &quot;$name_glob_pattern$&quot;" description="" toReformat="true" toShortenFQNames="true">
    <variable name="directory" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name_glob_pattern" expression="" defaultValue="&quot;*&quot;" alwaysStopAt="true" />
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="Django" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="PUPPET_FILE" value="false" />
      <option name="Python" value="false" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="bh_string literal" value="'$x$'" description="string without accidental variable substitution" toReformat="true" toShortenFQNames="true">
    <variable name="x" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="Django" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="PUPPET_FILE" value="false" />
      <option name="Python" value="false" />
      <option name="REQUEST" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="bh_def" value="function $FUNCNAME$() {&#10;    $statement$&#10;}" description="Function template (using python abbreviation)" toReformat="true" toShortenFQNames="false">
    <variable name="statement" expression="" defaultValue="&quot; $@&quot;" alwaysStopAt="true" />
    <variable name="FUNCNAME" expression="" defaultValue="&quot;function_name&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_directory of current file" value="$(dirname &quot;$0&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_number of argumenmts" value="$#" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if elif" value="if [[ $1$ ]]&#10;then&#10;    $2$&#10;elif [[ $3$ ]]&#10;then&#10;    $4$&#10;else&#10;    $5$&#10;fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="2" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="3" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="4" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="5" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if is  file" value="if [[ -f $1$  ]]&#10;then&#10;    $111$&#10;fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="111" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_edit" value="$x$$(pawk &quot;$original$&quot; -p &quot;$python_code$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="original" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="python_code" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="x" expression="" defaultValue="&quot;a=&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_is in kubernetes" value="&quot;$(hostname)&quot; == *home-kli02-*" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_is in grid" value="&quot;$(hostname)&quot; == *.yahoo.com" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if None equals" value="$var_to_check$=${$var_to_check$:-&quot;$default_value$&quot;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="var_to_check" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="default_value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if is directory" value="if [[ -d $1$  ]]&#10;then&#10;    $111$&#10;fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="111" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_basename of path" value="$(basename &quot;$x$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="x" expression="" defaultValue="$0" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_script directory" value="$(realpath $(dirname &quot;$0&quot;))/" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_comment out to use python" value="# comment out to use python" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_main program path" value="&quot;$0&quot;" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_parent diretory of" value="$(dirname &quot;$$$x$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="x" expression="" defaultValue="&quot;0&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_main program directory" value="$(dirname &quot;$$$x$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="x" expression="" defaultValue="&quot;0&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_alias" value="unalias $name$  &gt; /dev/null 2&gt;&amp;1&#10;$enable_flat$ alias origina_$name$=$(which $name$)&#10;function $name$() {&#10;            $command$ $@&#10;}" description="" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="command" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="enable_flat" expression="" defaultValue="&quot;#&quot; " alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if in OS" value="if [[ &quot;$(uname)&quot; == &quot;Darwin&quot; ]]&#10;then&#10;        $ss$&#10;elif [[ $(hostname -s) == *home-kli02-* ]]&#10;then&#10;        $ss1$&#10;elif [[ &quot;$(hostname)&quot; == *.yahoo.com ]]&#10;then&#10;        $ss2$&#10;elif [[ &quot;$(awk -F= '/^NAME/{print $2}' /etc/os-release)&quot; == &quot;\&quot;Ubuntu\&quot;&quot; ]]&#10;then&#10;    $ssx$&#10;else&#10;    $ss3$&#10;fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="ss" expression="" defaultValue="&quot;echo &gt; /dev/null&quot;" alwaysStopAt="true" />
    <variable name="ss1" expression="" defaultValue="&quot;echo &gt; /dev/null&quot;" alwaysStopAt="true" />
    <variable name="ss2" expression="" defaultValue="&quot;echo &gt; /dev/null&quot;" alwaysStopAt="true" />
    <variable name="ssx" expression="" defaultValue="&quot;echo &gt; /dev/null&quot;" alwaysStopAt="true" />
    <variable name="ss3" expression="" defaultValue="&quot;echo &gt; /dev/null&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_all arguments as list" value="$@" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_all arguments as string" value="$*" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_nop" value="echo &gt; /dev/null" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_print inline" value="echo -n " description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="Django" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="PUPPET_FILE" value="false" />
      <option name="Python" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="bh_fold code" value="function $func$() {&#10;     $stmt$&#10;}&#10;$func$" description="" toReformat="true" toShortenFQNames="true">
    <variable name="stmt" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="func" expression="" defaultValue="&quot;x&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_cd previous directory" value="local previous_directory=$(pwd)&#10;cd ${previous_directory}" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_for-each-in" value="for $LOOPVAR$ in $LOOPITEMS$ ; do&#10;    $END$$SELECTION$&#10;done&#10;" description="&quot;For each in set&quot; loop" toReformat="true" toShortenFQNames="false">
    <variable name="LOOPVAR" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <variable name="LOOPITEMS" expression="" defaultValue="&quot;item1 item2 item3&quot;" alwaysStopAt="true" />
  </template>
  <template name="bh_run if main" value="if [[ &quot;${BASH_SOURCE[0]}&quot; == &quot;${0}&quot; ]]; then&#10;    $install_RemoteClientByIP$&#10;fi&#10;&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="install_RemoteClientByIP" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_for open" value="for $variable$ in $space_separated_values$; do&#10;    InPersistentSessionLocalProcess_open pp $file$ --$parameter_name$ ${$variable$}&#10;done" description="" toReformat="true" toShortenFQNames="true">
    <variable name="file" expression="" defaultValue="&quot;path.py&quot;" alwaysStopAt="true" />
    <variable name="space_separated_values" expression="" defaultValue="&quot;2 3 4 5&quot;" alwaysStopAt="true" />
    <variable name="parameter_name" expression="" defaultValue="&quot;parameter&quot;" alwaysStopAt="true" />
    <variable name="variable" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_if string equal" value="if [[ ${$s1$} == $s2$ ]]; then&#10;    echo &gt; /dev/null&#10;fi" description="" toReformat="true" toShortenFQNames="true">
    <variable name="s1" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="s2" expression="" defaultValue="&quot;true&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_suppress stdout stderr" value="&gt;/dev/null 2&gt;&amp;1" description="" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Bash" value="false" />
      <option name="CSS" value="false" />
      <option name="CUCUMBER_FEATURE_FILE" value="false" />
      <option name="CoffeeScript" value="false" />
      <option name="Django" value="false" />
      <option name="ECMAScript6" value="false" />
      <option name="HAML" value="false" />
      <option name="HTML" value="false" />
      <option name="JAVA_SCRIPT" value="false" />
      <option name="JSON" value="false" />
      <option name="OTHER" value="true" />
      <option name="PUPPET_FILE" value="false" />
      <option name="Python" value="false" />
      <option name="SQL" value="false" />
      <option name="TypeScript" value="false" />
      <option name="XML" value="false" />
    </context>
  </template>
  <template name="bh_ablate" value="export GPUID=0&#10;for $variable$ in $range_list$; do&#10;    ipo CUDA_VISIBLE_DEVICES=${GPUID} do_disable_PDB=1 pd $(LocalDirectory_get_ChildrenFilesList_in_shell $(realpath $(dirname &quot;$0&quot;)) .py | head -n 1  ) --${ablation_subdirectory__parameter_NAME} $ablation_subdirectory$ --$parameter$ ${$variable$} &#10;    GPUID=$((GPUID + 1))&#10;done" description="" toReformat="true" toShortenFQNames="true">
    <variable name="parameter" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="range_list" expression="" defaultValue="&quot;3 4 5&quot;" alwaysStopAt="true" />
    <variable name="ablation_subdirectory" expression="date(&quot;Y_MM_d_E_H_m&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="variable" expression="" defaultValue="&quot;v&quot;" alwaysStopAt="true" />
    <context>
      <option name="SHELL_SCRIPT" value="true" />
    </context>
  </template>
  <template name="bh_replace" value="$(sed 's!$old$!$new$!' &lt;&lt;&lt;&quot;$$$variable_name$&quot;)" description="" toReformat="true" toShortenFQNames="true">
    <variable name="variable_name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="old" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="new" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Bash" value="true" />
    </context>
  </template>
</templateSet>